name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    # --- 1. чекаут кода ----------------------------------------------
    - name: Checkout code
      uses: actions/checkout@v4

    # --- 2. выбор версии Python --------------------------------------
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    # --- 3. кэшируем pip-packages ------------------------------------
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    # --- 4. устанавливаем зависимости проекта ------------------------
    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # линтеры – только для CI, можно не вносить в requirements.txt
        pip install flake8 black

    # --- 5. линт: Flake8 + Black ------------------------------------
    - name: Run Flake8
      run: |
        flake8 --config .flake8 .

    - name: Check formatting with Black
      run: |
        black --check .

    # ---- 6. (опция) unit-tests -------------------------------------
    - name: Run tests
      run: |
       pytest -q

  # ---------- пример job, который билдит Docker-образ ---------------
  # Срабатывает только на push в main, чтобы не гонять на PR
  docker-build:
    if: github.event_name == 'push'
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract tag  (YYYYMMDD-HHMM)
      id: tag
      run: echo "TAG=$(date +'%Y%m%d-%H%M')" >> "$GITHUB_OUTPUT"

    - name: Build & push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          docker.io/${{ secrets.DOCKERHUB_USER }}/linux-quiz-bot:${{ steps.tag.outputs.TAG }}


    - name: Debug secrets presence
      run: |
        echo "Username len: ${#DOCKERHUB_USERNAME}"
        echo "Token len:    ${#DOCKERHUB_TOKEN}"
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}